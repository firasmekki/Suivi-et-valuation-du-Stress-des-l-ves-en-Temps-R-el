const mongoose = require('mongoose');
const { Classe } = require('../models');

// Configuration MongoDB
const MONGODB_URI = 'mongodb://localhost:27017/stress_eleve';

// Classes de test √† cr√©er
const testClasses = [
  { niveau: '1ere', section: 'svt 1' },
  { niveau: '1ere', section: 'tech 1' },
  { niveau: '2eme', section: 'eco 1' },
  { niveau: '3eme', section: 'math 1' },
  { niveau: 'bac', section: 'info 1' }
];

async function createTestClasses() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // Cr√©er les classes
    for (const classeData of testClasses) {
      // V√©rifier si la classe existe d√©j√†
      const existingClasse = await Classe.findOne({
        niveau: classeData.niveau,
        section: classeData.section
      });

      if (!existingClasse) {
        const classe = new Classe({
          niveau: classeData.niveau,
          section: classeData.section,
          eleves: [],
          enseignants: []
        });
        await classe.save();
        console.log(`üìö Classe cr√©√©e: ${classe.niveau} ${classe.section} (ID: ${classe._id})`);
      } else {
        console.log(`üìö Classe existante: ${existingClasse.niveau} ${existingClasse.section} (ID: ${existingClasse._id})`);
      }
    }

    // V√©rifier les r√©sultats
    const allClasses = await Classe.find();
    console.log(`\nüìä Total: ${allClasses.length} classes cr√©√©es`);

    console.log('\n‚úÖ Script termin√© avec succ√®s!');
  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connect√© de MongoDB');
  }
}

// Ex√©cuter le script
createTestClasses(); 